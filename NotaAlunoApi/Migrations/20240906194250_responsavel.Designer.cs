// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotaAlunoApi.Data;

#nullable disable

namespace NotaAlunoApi.Migrations
{
    [DbContext(typeof(AlunoContext))]
    [Migration("20240906194250_responsavel")]
    partial class responsavel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NotaAlunoApi.Model.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Responsavel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("NotaAlunoApi.Model.Nota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int>("Ciencias")
                        .HasColumnType("int");

                    b.Property<int>("Geografia")
                        .HasColumnType("int");

                    b.Property<int>("Historia")
                        .HasColumnType("int");

                    b.Property<int>("Ingles")
                        .HasColumnType("int");

                    b.Property<int>("Matematica")
                        .HasColumnType("int");

                    b.Property<int>("Portugues")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId")
                        .IsUnique();

                    b.ToTable("Notas");
                });

            modelBuilder.Entity("NotaAlunoApi.Model.Permissao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NomePermissao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeVisual")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Permissaos");
                });

            modelBuilder.Entity("NotaAlunoApi.Model.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("NotaAlunoApi.Model.UsuarioPermissao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PermissaoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermissaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioPermissaos");
                });

            modelBuilder.Entity("NotaAlunoApi.Model.Nota", b =>
                {
                    b.HasOne("NotaAlunoApi.Model.Aluno", "Aluno")
                        .WithOne("Nota")
                        .HasForeignKey("NotaAlunoApi.Model.Nota", "AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("NotaAlunoApi.Model.UsuarioPermissao", b =>
                {
                    b.HasOne("NotaAlunoApi.Model.Permissao", "Permissao")
                        .WithMany("UsuarioPermissao")
                        .HasForeignKey("PermissaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NotaAlunoApi.Model.Usuario", "Usuario")
                        .WithMany("UsuarioPermissao")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permissao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NotaAlunoApi.Model.Aluno", b =>
                {
                    b.Navigation("Nota")
                        .IsRequired();
                });

            modelBuilder.Entity("NotaAlunoApi.Model.Permissao", b =>
                {
                    b.Navigation("UsuarioPermissao");
                });

            modelBuilder.Entity("NotaAlunoApi.Model.Usuario", b =>
                {
                    b.Navigation("UsuarioPermissao");
                });
#pragma warning restore 612, 618
        }
    }
}
